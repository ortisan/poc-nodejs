version: "3"

networks:
  poc:

services:

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - poc

  flyway:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://postgres:5432/postgres -user=postgres -password=postgres migrate
    volumes:
      - ./etc/db/migration:/flyway/sql
    networks:
      - poc
    depends_on:
      - postgres

  open-telemetry-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    volumes:
      - ./etc/otel-collector-config.yaml:/etc/otelcol/config.yaml 
    networks:
      - poc
    depends_on:
      - tempo
      - prometheus

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./etc/tempo.yaml:/etc/tempo.yaml
      - ./data/tempo:/tmp/tempo
    ports:
      - "14268" # jaeger ingest
      - "3200"  # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"  # zipkin
    networks:
      - poc

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/loki.yaml
    ports:
      - "3100:3100" # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./etc/loki.yaml:/etc/loki/loki.yaml
      - ./data/loki-data:/tmp/loki
    networks:
      - poc

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"
    networks:
      - poc


  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./etc/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - poc
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./data/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    networks:
      - poc
    depends_on:
      - prometheus
      - tempo
      - loki

  app:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
      - OTEL_SERVICE_NAME=node-app
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres?schema=public
    ports:
      - "8000:8000"
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M  
        limits:
          cpus: '1'
          memory: 1024M
    networks:
      - poc
    depends_on:
      - postgres