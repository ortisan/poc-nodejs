version: "3"

networks:
  poc:

services:

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./db/.postgres-data:/var/lib/postgresql/data
    # networks:
    #   - poc

  flyway:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://postgres:5432/postgres -user=postgres -password=postgres migrate
    volumes:
      - ./db/migration:/flyway/sql
    # networks:
    #   - poc
    depends_on:
      - postgres

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ../shared/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin

  open-telemetry-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - 4317:4317
      - 4318:4318
      - 55680:55680
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol/config.yaml 
    networks:
      - poc
      
  # fluent-bit:
  #   image: fluent/fluent-bit:latest
  #   ports:
  #     - 24224:24224/tcp
  #     - 24224:24224/udp
  #   # image: grafana/fluent-bit-plugin-loki:latest
  #   container_name: fluent-bit
  #   # environment:
  #   #   - LOKI_URL=http://loki:3100/loki/api/v1/push
  #   volumes:
  #     - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
  #     - ./docker/volume:/tmp
  #   links:
  #     - loki
  #   networks:
  #     - poc

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - poc

  # # alert-manager:
  # #   image: quay.io/prometheus/alertmanager:latest
  # #   ports:
  # #     - 9093:9093
  # #   networks:
  # #     - poc

  # grafana:
  #   image: grafana/grafana:latest
  #   user: 1000:1000
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   entrypoint:
  #     - sh
  #     - -euc
  #     - |
  #       mkdir -p /etc/grafana/provisioning/datasources
  #       cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
  #       apiVersion: 1
  #       datasources:
  #       - name: Prometheus
  #         type: prometheus
  #         access: proxy 
  #         orgId: 1
  #         url: http://prometheus:9090
  #         basicAuth: false
  #         isDefault: true
  #         version: 1
  #         editable: true
  #       - name: Loki
  #         type: loki
  #         access: proxy 
  #         orgId: 1
  #         url: http://loki:3100
  #         basicAuth: false
  #         isDefault: false
  #         version: 1
  #         editable: true
  #       - name: Jaeger
  #         type: jaeger
  #         access: proxy 
  #         orgId: 1
  #         url: http://jaeger:16686
  #         basicAuth: false
  #         isDefault: false
  #         version: 1
  #         editable: true
  #       EOF
  #       /run.sh
  #   networks:
  #     - poc

  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - 3100:3100
  #   volumes:
  #     - ./loki.yaml:/etc/loki/local-config.yaml
  #   command: -config.file=/etc/loki/local-config.yaml
  #   networks:
  #     - poc

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - 5775:5775/udp
  #     - 6831:6831/udp
  #     - 6832:6832/udp
  #     - 5778:5778
  #     - 16686:16686
  #     - 14268:14268
  #     - 9411:9411
  #   environment:
  #     - COLLECTOR_ZIPKIN_HTTP_PORT=9411
  #   networks:
  #     - poc